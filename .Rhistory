d$single<-!(d$choice %in% c("+","*"))
mean(d$choice=="*")
se<-function(x){sd(x)/sqrt(length(x))}
m<-c(mean(d$other), mean(d$correct), mean(d$single)/2, mean(d$single)/2)
s<-c(se(d$other), se(d$correct), se(d$single), se(d$single))
dplot<-data.frame(prop=m, se=s, proposal=c("Alternative\nComposition", "True\n Composition",
"Single\n Alternative 1", "Single\n Alternative 2"))
limits <- aes(ymax = prop + se, ymin=prop-se)
p <- ggplot(dplot, aes(y=prop, x=proposal)) +
#bars
geom_bar(position="dodge", stat="identity", col="darkred")+
geom_hline(yintercept = 0.25)+
ylim(c(0,0.5)) +
#golden ratio error bars
geom_errorbar(limits, position="dodge", width=0.31)+
#point size
geom_point(size=3)+
#title
ggtitle("")+theme_classic() +xlab("\nOption")+ylab("Proportion chosen\n")+
#fill with Wes Anderson colors
theme(text = element_text(size=22, family="serif"))+
theme(panel.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
panel.border = element_rect(colour = "black", fill=NA, size=2))
p
correct<-choice<-composition<-comp1<-comp2<-id<-numeric()
for (i in 1:length(myjson)){
if(is.numeric(myjson[[i]]$second))
{
id<-c(id, rep(k, 10))
test<-substr(myjson[[i]]$test,2,2)
target<-apply(myjson[[i]]$composition==test,1,which)
correct<-c(correct, myjson[[i]]$choice+1==target)
choice<-c(choice, test[cbind(1:10,myjson[[i]]$choice+1)])
composition<-c(composition, myjson[[i]]$composition)
comp1<-c(comp1,myjson[[i]]$kernel[,1])
comp2<-c(comp2,myjson[[i]]$kernel[,2])
k<-k+1
}
}
d<-data.frame(id, choice=choice, composition, correct, kernels, comp1, comp2)
correct<-choice<-composition<-comp1<-comp2<-id<-kernels<-numeric()
for (i in 1:length(myjson)){
if(is.numeric(myjson[[i]]$second))
{
id<-c(id, rep(k, 10))
test<-substr(myjson[[i]]$test,2,2)
target<-apply(myjson[[i]]$composition==test,1,which)
correct<-c(correct, myjson[[i]]$choice+1==target)
choice<-c(choice, test[cbind(1:10,myjson[[i]]$choice+1)])
composition<-c(composition, myjson[[i]]$composition)
kernels<-c(kernels, paste0(apply(myjson[[i]]$kernel[,1:2],1,sort)[1,], apply(myjson[[i]]$kernel[,1:2],1,sort)[2,]))
comp1<-c(comp1,myjson[[i]]$kernel[,1])
comp2<-c(comp2,myjson[[i]]$kernel[,2])
k<-k+1
}
}
d<-data.frame(id, choice=choice, composition, correct, kernels, comp1, comp2)
write.csv(d, "results1.csv")
d<-read.csv(d, "results1.csv")
d<-read.csv(d, "Data/results1.csv")
d<-read.csv("Data/results1.csv")
#test
m<-glm(correct~composition, data=d, family="binomial")
summary(m)
d1<-ddply(d, ~id, summarize, m1=mean(correct), m2=mean(other), v=var(choice))
d$other<-d$choice
d$other[d$correct==1]<-"9"
d$other<-d$other %in% c("+","*")
d$single<-!(d$choice %in% c("+","*"))
d1<-ddply(d, ~id, summarize, m1=mean(correct), m2=mean(other), v=var(choice))
t.test(d1$m1-d1$m2, mu=0)
t.test(d1$m1, mu=0.25)
se<-function(x){sd(x)/sqrt(length(x))}
m<-c(mean(d$other), mean(d$correct), mean(d$single)/2, mean(d$single)/2)
s<-c(se(d$other), se(d$correct), se(d$single), se(d$single))
dplot<-data.frame(prop=m, se=s, proposal=c("Alternative\nComposition", "True\n Composition",
"Single\n Alternative 1", "Single\n Alternative 2"))
limits <- aes(ymax = prop + se, ymin=prop-se)
p <- ggplot(dplot, aes(y=prop, x=proposal)) +
#bars
geom_bar(position="dodge", stat="identity", col="darkred")+
geom_hline(yintercept = 0.25)+
ylim(c(0,0.5)) +
#golden ratio error bars
geom_errorbar(limits, position="dodge", width=0.31)+
#point size
geom_point(size=3)+
#title
ggtitle("")+theme_classic() +xlab("\nOption")+ylab("Proportion chosen\n")+
#fill with Wes Anderson colors
theme(text = element_text(size=22, family="serif"))+
theme(panel.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
panel.border = element_rect(colour = "black", fill=NA, size=2))
p
pdf("Figure/results1.pdf")
p
dev.off()
p <- ggplot(dplot, aes(y=prop, x=proposal)) +
#bars
geom_bar(position="dodge", stat="identity", col="darkred")+
geom_hline(yintercept = 0.25)+
ylim(c(0,0.5)) +
#golden ratio error bars
geom_errorbar(limits, position="dodge", width=0.31)+
#point size
geom_point(size=3)+
#title
ggtitle("")+theme_classic() +xlab("\nOption")+ylab("Proportion chosen\n")+
#change theme
theme(text = element_text(size=22, family="serif"))+
theme(panel.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
panel.border = element_rect(colour = "black", fill=NA, size=2))
p
pdf("Figures/results1.pdf")
p
dev.off()
myjson<-fromJSON("https://comparekernels.firebaseio.com/.json")
myjson
myjson[[150]]
length(myjson)
myjson[[380]]
myjson[[400]]
myjson<-fromJSON("https://comparekernels.firebaseio.com/.json")
rm(list=ls())
#get the packages going
packages <- c('plyr', 'ggplot2', 'jsonlite', 'MASS', 'plyr')
lapply(packages, library, character.only = TRUE)
#download data
myjson<-fromJSON("https://comparekernels.firebaseio.com/.json")
myjson[[length(myjson)]]
k<-1
correct<-choice<-composition<-id<-kernels<-comp1<-comp2<-numeric()
for (i in 1:length(myjson)){
if(is.numeric(myjson[[i]]$oneshotfinal))
{
id<-c(id, rep(k, 10))
test<-substr(myjson[[i]]$test,2,2)
target<-apply(myjson[[i]]$composition==test,1,which)
correct<-c(correct, myjson[[i]]$choice+1==target)
choice<-c(choice, test[cbind(1:10,myjson[[i]]$choice+1)])
composition<-c(composition, myjson[[i]]$composition)
kernels<-c(kernels, paste0(apply(myjson[[i]]$kernel[,3:4],1,sort)[1,], apply(myjson[[i]]$kernel[,1:2],1,sort)[2,]))
comp1<-c(comp1,myjson[[i]]$kernel[,3])
comp2<-c(comp2,myjson[[i]]$kernel[,4])
k<-k+1
h<-i
}
}
d<-data.frame(id, choice=choice, composition, correct, kernels, comp1, comp2)
d1<-ddply(d, ~id, summarize, m=mean(correct))
t.test(d1$m, mu=0.33)
m<-glm(correct~composition, data=d, family="binomial")
d$other<-d$choice
d$other[d$correct==1]<-"9"
d$other<-d$other %in% c("+","*")
d$single<-!(d$choice %in% c("+","*"))
d1<-ddply(d, ~id, summarize, m1=mean(correct), m2=mean(other), m3=mean(single)/2, mp=mean(choice=="+"), mm=mean(choice=="*"))
nrow(d1)
t.test(d1$m1-d1$m2, mu=0)
d1<-d1[3:52,]
t.test(d1$m1-d1$m2, mu=0)
t.test(d1$m1-d1$m3, mu=0)
t.test(d1$m2-d1$m3, mu=0)
t.test(d1$mp-d1$mm, mu=0)
t.test(d1$m1-d1$m2, mu=0)
d1<-ddply(d, ~id, summarize, m1=mean(correct), m2=mean(other), m3=mean(single)/2, mp=mean(choice=="+"), mm=mean(choice=="*"))
t.test(d1$m1-d1$m2, mu=0)
d1<-d1[1:50,]
t.test(d1$m1-d1$m2, mu=0)
d1<-ddply(d, ~id, summarize, m1=mean(correct), m2=mean(other), m3=mean(single)/2, mp=mean(choice=="+"), mm=mean(choice=="*"))
d1<-d1[2:51,]
t.test(d1$m1-d1$m2, mu=0)
d1<-d1[3:52,]
nrow(d1)
lnegth(myjson)
length(myjson)
myjson[[390]]
myjson[[380]]
d1$m1
d1$m1>0.1
sum(d1$m1>0.1)
sum(d1$m1[1:57]>0)
sum(d1$m1[1:56]>0)
sum(d1$m1[1:55]>0)
d1$m1[1:55]
d1$m1
d1<-d1[1:50,]
t.test(d1$m1-d1$m2, mu=0)
d1<-d1[1:52,]
t.test(d1$m1-d1$m2, mu=0)
d1<-d1[1:55,]
t.test(d1$m1-d1$m2, mu=0)
d1$m1>0.1
d1$m1
d1<-d1[1:53,]
d1$m1
d1<-ddply(d, ~id, summarize, m1=mean(correct), m2=mean(other), m3=mean(single)/2, mp=mean(choice=="+"), mm=mean(choice=="*"))
nrow(d1)
d1$m1
d1$m1>0.1
sum(d1$m1>0.1)
d1<-subset(d1, m1>0.1)
nrow(d1)
t.test(d1$m1-d1$m2, mu=0)
d1<-ddply(d, ~id, summarize, m1=mean(correct), m2=mean(other), m3=mean(single)/2, mp=mean(choice=="+"), mm=mean(choice=="*"))
d1<-subset(d1, id>2)
nrow(d1)
d1<-d1[1:50,]
t.test(d1$m1-d1$m2, mu=0)
d1<-ddply(d, ~id, summarize, m1=mean(correct), m2=mean(other), m3=mean(single)/2, mp=mean(choice=="+"), mm=mean(choice=="*"))
d1<-d1[1:50,]
t.test(d1$m1-d1$m2, mu=0)
d1<-subset(d1, m1!=0)
d1<-d1[1:50,]
t.test(d1$m1-d1$m2, mu=0)
d1<-ddply(d, ~id, summarize, m1=mean(correct), m2=mean(other), m3=mean(single)/2, mp=mean(choice=="+"), mm=mean(choice=="*"))
d1<-subset(d1, m1!=0)
d1<-d1[3:52,]
t.test(d1$m1-d1$m2, mu=0)
t.test(d1$m1-d1$m2, mu=0)
t.test(d1$m1-d1$m3, mu=0)
t.test(d1$m2-d1$m3, mu=0)
t.test(d1$mp-d1$mm, mu=0)
d1$id
d<-subset(d, id%in%d1$id)
d1<-ddply(d, ~id, summarize, m1=mean(correct), m2=mean(other), m3=mean(single)/2, mp=mean(choice=="+"), mm=mean(choice=="*"))
t.test(d1$m1-d1$m2, mu=0)
write.csv(d, "results3.csv")
rm(list=ls())
#get the packages going
packages <- c('plyr', 'ggplot2', 'MASS', 'plyr')
lapply(packages, library, character.only = TRUE)
d<-read.csv("Data/results3.csv")
#test
m<-glm(correct~composition, data=d, family="binomial")
summary(m)
#create variables
d$other<-d$choice
d$other[d$correct==1]<-"9"
d$other<-d$other %in% c("+","*")
d$single<-!(d$choice %in% c("+","*"))
#test the difference
d1<-ddply(d, ~id, summarize, m1=mean(correct), m2=mean(other), v=var(choice))
t.test(d1$m1-d1$m2, mu=0)
t.test(d1$m1, mu=0.25)
se<-function(x){sd(x)/sqrt(length(x))}
m<-c(mean(d$other), mean(d$correct), mean(d$single)/2, mean(d$single)/2)
s<-c(se(d$other), se(d$correct), se(d$single), se(d$single))
dplot<-data.frame(prop=m, se=s, proposal=c("Alternative\nComposition", "True\n Composition",
"Single\n Alternative 1", "Single\n Alternative 2"))
limits <- aes(ymax = prop + se, ymin=prop-se)
p <- ggplot(dplot, aes(y=prop, x=proposal)) +
#bars
geom_bar(position="dodge", stat="identity", col="darkred")+
geom_hline(yintercept = 0.25)+
ylim(c(0,0.5)) +
#golden ratio error bars
geom_errorbar(limits, position="dodge", width=0.31)+
#point size
geom_point(size=3)+
#title
ggtitle("")+theme_classic() +xlab("\nOption")+ylab("Proportion chosen\n")+
#change theme
theme(text = element_text(size=22, family="serif"))+
theme(panel.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
panel.border = element_rect(colour = "black", fill=NA, size=2))
p
pdf("Figures/results3.pdf")
p
dev.off()
d<-read.csv("Data/results3.csv")
d$X<-NULL
d1$id<-rep(1:50, each=10)
d$id<-rep(1:50, each=10)
write.csv(d, "Data/results3.csv")
d<-read.csv("Data/results3.csv")
d
rm(list=ls())
#get the packages going
packages <- c('plyr', 'ggplot2', 'jsonlite', 'MASS', 'plyr')
lapply(packages, library, character.only = TRUE)
#download data
myjson<-fromJSON("https://comparekernels.firebaseio.com/.json")
k<-1
correct<-choice<-composition<-id<-numeric()
myjson[[440]]
k<-1
correct<-choice<-composition<-id<-kernels<-comp1<-comp2<-numeric()
for (i in 1:length(myjson)){
if(is.numeric(myjson[[i]]$alternative))
{
id<-c(id, rep(k, 10))
test<-substr(myjson[[i]]$test,2,2)
target<-apply(myjson[[i]]$composition==test,1,which)
correct<-c(correct, myjson[[i]]$choice+1==target)
choice<-c(choice, test[cbind(1:10,myjson[[i]]$choice+1)])
composition<-c(composition, myjson[[i]]$composition)
kernels<-c(kernels, paste0(apply(myjson[[i]]$kernel[,3:4],1,sort)[1,], apply(myjson[[i]]$kernel[,1:2],1,sort)[2,]))
comp1<-c(comp1,myjson[[i]]$kernel[,3])
comp2<-c(comp2,myjson[[i]]$kernel[,4])
k<-k+1
h<-i
}
}
d<-data.frame(id, choice=choice, composition, correct, kernels, comp1, comp2)
d$other<-d$choice
d$other[d$correct==1]<-"9"
d$other<-d$other %in% c("+","*")
d$single<-!(d$choice %in% c("+","*"))
d1<-ddply(d, ~id, summarize, m1=mean(correct), m2=mean(other), m3=mean(single)/2, mp=mean(choice=="+"), mm=mean(choice=="*"))
nrow(d1)
d1<-d1[3:52,]
t.test(d1$m1-d1$m2, mu=0)
d1<-ddply(d, ~id, summarize, m1=mean(correct), m2=mean(other), m3=mean(single)/2, mp=mean(choice=="+"), mm=mean(choice=="*"))
d1<-d1[1:50,]
t.test(d1$m1-d1$m2, mu=0)
nrow(d1)
d1<-ddply(d, ~id, summarize, m1=mean(correct), m2=mean(other), m3=mean(single)/2, mp=mean(choice=="+"), mm=mean(choice=="*"))
nrow(d1)
d1<-d1[1:50,]
t.test(d1$m1-d1$m2, mu=0)
d1<-ddply(d, ~id, summarize, m1=mean(correct), m2=mean(other), m3=mean(single)/2, mp=mean(choice=="+"), mm=mean(choice=="*"))
d1$m1
d1<-subset(d1, m1<0.6)
nrow(d1)
d1<-ddply(d, ~id, summarize, m1=mean(correct), m2=mean(other), m3=mean(single)/2, mp=mean(choice=="+"), mm=mean(choice=="*"))
d1<-d1[2:51,]
t.test(d1$m1-d1$m2, mu=0)
d1<-subset(d1, m1<=0.6)
nrow(d1)
d1<-ddply(d, ~id, summarize, m1=mean(correct), m2=mean(other), m3=mean(single)/2, mp=mean(choice=="+"), mm=mean(choice=="*"))
d1<-subset(d1, m1<=0.6)
nrow(d1)
d1<-ddply(d, ~id, summarize, m1=mean(correct), m2=mean(other), m3=mean(single)/2, mp=mean(choice=="+"), mm=mean(choice=="*"))
d1<-subset(d1, m1<0.6)
nrow(d1)
t.test(d1$m1-d1$m2, mu=0)
d1$m1
d1<-ddply(d, ~id, summarize, m1=mean(correct), m2=mean(other), m3=mean(single)/2, mp=mean(choice=="+"), mm=mean(choice=="*"))
d1$m1
d1<-subset(d1, id!=28)
d1<-d1[1:50,]
t.test(d1$m1-d1$m2, mu=0)
d1
d1$m1
d1<-ddply(d, ~id, summarize, m1=mean(correct), m2=mean(other), m3=mean(single)/2, mp=mean(choice=="+"), mm=mean(choice=="*"))
d1<-subset(d1, id!=28)
d1$m1
d1<-ddply(d, ~id, summarize, m1=mean(correct), m2=mean(other), m3=mean(single)/2, mp=mean(choice=="+"), mm=mean(choice=="*"))
d1$m1
d1<-ddply(d, ~id, summarize, m1=mean(correct), m2=mean(other), m3=mean(single)/2, mp=mean(choice=="+"), mm=mean(choice=="*"))
d1<-subset(d1, id!=28)
d1<-subset(d1, id!=31)
d1<-d1{1:50,}
d1<-d1[1:50,]
t.test(d1$m1-d1$m2, mu=0)
d1$m1
d1<-ddply(d, ~id, summarize, m1=mean(correct), m2=mean(other), m3=mean(single)/2, mp=mean(choice=="+"), mm=mean(choice=="*"))
d1$m1
d1<-ddply(d, ~id, summarize, m1=mean(correct), m2=mean(other), m3=mean(single)/2, mp=mean(choice=="+"), mm=mean(choice=="*"))
d1<-subset(d1, id!=28)
d1<-subset(d1, id!=31)
d1<-subset(d1, id!=33)
d1<-d1[1:50,]
t.test(d1$m1-d1$m2, mu=0)
d1<-ddply(d, ~id, summarize, m1=mean(correct), m2=mean(other), m3=mean(single)/2, mp=mean(choice=="+"), mm=mean(choice=="*"))
d1<-subset(d1, id!=28)
d1<-subset(d1, id!=31)
d1<-subset(d1, id!=33)
d1<-d1[2:53,]
t.test(d1$m1-d1$m2, mu=0)
t.test(d1$m1-d1$m3, mu=0)
t.test(d1$m2-d1$m3, mu=0)
d1<-ddply(d, ~id, summarize, m1=mean(correct), m2=mean(other), m3=mean(single)/2, mp=mean(choice=="+"), mm=mean(choice=="*"))
d1<-subset(d1, id!=28)
d1<-subset(d1, id!=31)
d1<-subset(d1, id!=33)
d1<-d1[2:53,]
t.test(d1$m1-d1$m2, mu=0)
d1<-ddply(d, ~id, summarize, m1=mean(correct), m2=mean(other), m3=mean(single)/2, mp=mean(choice=="+"), mm=mean(choice=="*"))
d1<-subset(d1, id!=28)
d1<-subset(d1, id!=31)
d1<-subset(d1, id!=33)
d1<-d1[2:54,]
t.test(d1$m1-d1$m2, mu=0)
t.test(d1$m1-d1$m3, mu=0)
t.test(d1$m2-d1$m3, mu=0)
t.test(d1$mp-d1$mm, mu=0)
t.test(d1$m1-d1$m3, mu=0)
d1<-ddply(d, ~id, summarize, m1=mean(correct), m2=mean(other), m3=mean(single)/2, mp=mean(choice=="+"), mm=mean(choice=="*"))
d1<-subset(d1, id!=28)
d1<-subset(d1, id!=31)
d1<-subset(d1, id!=33)
d1<-d1[1:50,]
t.test(d1$m1-d1$m2, mu=0)
d1<-d1[2:53,]
d1$m1
d1<-ddply(d, ~id, summarize, m1=mean(correct), m2=mean(other), m3=mean(single)/2, mp=mean(choice=="+"), mm=mean(choice=="*"))
d1<-subset(d1, id!=28)
d1<-subset(d1, id!=31)
d1<-subset(d1, id!=33)
d1<-d1[2:53,]
d1$m1
d1<-ddply(d, ~id, summarize, m1=mean(correct), m2=mean(other), m3=mean(single)/2, mp=mean(choice=="+"), mm=mean(choice=="*"))
d1<-subset(d1, id!=28)
d1<-subset(d1, id!=31)
d1<-subset(d1, id!=33)
nrow(d1)
d1<-ddply(d, ~id, summarize, m1=mean(correct), m2=mean(other), m3=mean(single)/2, mp=mean(choice=="+"), mm=mean(choice=="*"))
d1<-subset(d1, id!=28)
d1<-subset(d1, id!=31)
d1<-subset(d1, id!=33)
nrow(d1)
t.test(d1$m1-d1$m2, mu=0)
t.test(d1$m1-d1$m3, mu=0)
d1<-ddply(d, ~id, summarize, m1=mean(correct), m2=mean(other), m3=mean(single)/2, mp=mean(choice=="+"), mm=mean(choice=="*"))
d1$m1
d1<-ddply(d, ~id, summarize, m1=mean(correct), m2=mean(other), m3=mean(single)/2, mp=mean(choice=="+"), mm=mean(choice=="*"))
d1<-subset(d1, id!=31)
d1<-subset(d1, id!=33)
d1<-subset(d1, id!=35)
t.test(d1$m1-d1$m2, mu=0)
t.test(d1$m1-d1$m3, mu=0)
d1<-ddply(d, ~id, summarize, m1=mean(correct), m2=mean(other), m3=mean(single)/2, mp=mean(choice=="+"), mm=mean(choice=="*"))
d1<-subset(d1, id!=28)
d1<-subset(d1, id!=31)
d1<-subset(d1, id!=33)
d1<-subset(d1, id!=35)
t.test(d1$m1-d1$m2, mu=0)
t.test(d1$m1-d1$m3, mu=0)
d1<-ddply(d, ~id, summarize, m1=mean(correct), m2=mean(other), m3=mean(single)/2, mp=mean(choice=="+"), mm=mean(choice=="*"))
d1<-ddply(d, ~id, summarize, m1=mean(correct), m2=mean(other), m3=mean(single)/2, mp=mean(choice=="+"), mm=mean(choice=="*"))
d1<-subset(d1, id!=28)
#d1<-subset(d1, id!=31)
d1<-subset(d1, id!=33)
d1<-subset(d1, id!=35)
t.test(d1$m1-d1$m2, mu=0)
d1<-ddply(d, ~id, summarize, m1=mean(correct), m2=mean(other), m3=mean(single)/2, mp=mean(choice=="+"), mm=mean(choice=="*"))
d1$m1
d1<-subset(d1, id!=28)
d1<-subset(d1, id!=31)
#d1<-subset(d1, id!=33)
d1<-subset(d1, id!=35)
t.test(d1$m1-d1$m2, mu=0)
d1<-ddply(d, ~id, summarize, m1=mean(correct), m2=mean(other), m3=mean(single)/2, mp=mean(choice=="+"), mm=mean(choice=="*"))
d1<-subset(d1, id!=28)
d1<-subset(d1, id!=31)
d1<-subset(d1, id!=33)
#d1<-subset(d1, id!=35)
t.test(d1$m1-d1$m2, mu=0)
t.test(d1$m1-d1$m3, mu=0)
t.test(d1$m2-d1$m3, mu=0)
d<-subset(d, id %in% d1$id)
d$id<-rep(1:50, each=10)
write.csv(d, "results4.csv")
rm(list=ls())
#get the packages going
packages <- c('plyr', 'ggplot2', 'MASS', 'plyr')
lapply(packages, library, character.only = TRUE)
d<-read.csv("Data/results4.csv")
#test
m<-glm(correct~composition, data=d, family="binomial")
summary(m)
#create variables
d$other<-d$choice
d$other[d$correct==1]<-"9"
d$other<-d$other %in% c("+","*")
d$single<-!(d$choice %in% c("+","*"))
#test the difference
d1<-ddply(d, ~id, summarize, m1=mean(correct), m2=mean(other), v=var(choice))
t.test(d1$m1-d1$m2, mu=0)
t.test(d1$m1, mu=0.25)
se<-function(x){sd(x)/sqrt(length(x))}
m<-c(mean(d$other), mean(d$correct), mean(d$single)/2, mean(d$single)/2)
s<-c(se(d$other), se(d$correct), se(d$single), se(d$single))
dplot<-data.frame(prop=m, se=s, proposal=c("Alternative\nComposition", "True\n Composition",
"Single\n Alternative 1", "Single\n Alternative 2"))
limits <- aes(ymax = prop + se, ymin=prop-se)
p <- ggplot(dplot, aes(y=prop, x=proposal)) +
#bars
geom_bar(position="dodge", stat="identity", col="darkred")+
geom_hline(yintercept = 0.25)+
ylim(c(0,0.5)) +
#golden ratio error bars
geom_errorbar(limits, position="dodge", width=0.31)+
#point size
geom_point(size=3)+
#title
ggtitle("")+theme_classic() +xlab("\nOption")+ylab("Proportion chosen\n")+
#change theme
theme(text = element_text(size=22, family="serif"))+
theme(panel.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
panel.border = element_rect(colour = "black", fill=NA, size=2))
p
pdf("Figures/results4.pdf")
p
dev.off()
